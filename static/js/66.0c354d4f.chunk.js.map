{"version":3,"file":"static/js/66.0c354d4f.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ListContacts/ListContacts.styled.jsx","components/ItemContact/ItemContact.styled.js","components/ItemContact/ItemContact.js","components/InputFilter/InputFilter.styled.jsx","components/InputFilter/InputFilter.jsx","components/ListContacts/ListContacts.jsx","components/Loader/Loader.styled.jsx","components/Loader.jsx","pages/Contacts.js"],"sourcesContent":["export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter;","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 15px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin-bottom: 10px;\n  font-size: 18px;\n  line-height: 1.4;\n  font-weight: 500;\n`;\n\nexport const Input = styled(Field)`\n  font-size: 18px;\n  line-height: 1.6;\n  padding: 5px;\n  border: 1px solid #cccaca;\n  border-radius: 5px;\n`;\n\nexport const FormError  = styled(ErrorMessage)`\n  font-size: 11px;\n  font-weight: 400;\n\n  color: #d80919;\n`;\n\nexport const Button = styled.button`\n  padding: 5px;\n  font-size: 14px;\n  border: 1px solid #9c9a9a;\n  border-radius: 6px;\n  background-color: #56e9f0;\n  \n  &:hover,\n  &:focus,\n  &:active {\n    background-color: #d9e97d;\n  }\n`;","import { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport styled from 'styled-components';\nimport { StyledForm, Label, Input,  Button } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { toast } from 'react-hot-toast';\nimport { getContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.string().min(13).max(13).required(),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ErrorText = styled.p`\n  font: 0.6em 'typewriter', sans-serif;\n  color: red;\n  margin-top: 5px;\n`;\n\n\nconst FormError  = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  // const isLoading = useSelector(getIsLoading);\n\n  const allContacts = useSelector(getContacts);\n\n  const handleSubmit = (contact, { resetForm }) => {\n    if (allContacts.some(item => item.name === contact.name)) {\n      alert(`Contact ${contact.name} already exist`);\n      return;\n    }\n    dispatch(addContact(contact));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n        >\n      <StyledForm>\n        <Label>\n          Name\n          <Input type=\"text\" name=\"name\" placeholder=\"Rosie Simpson\" />\n          <FormError component=\"div\" name=\"name\" />\n        </Label>\n        <Label>\n          Number\n          <br />\n          <Input type=\"tel\" name=\"number\" placeholder=\"+380673454545\" />\n          <FormError component=\"div\" name=\"number\" />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </StyledForm>\n    </Formik>\n  );\n};","import styled from 'styled-components';\n\nexport const List = styled.ol`\n  display: block;\n  list-style-type: lower-greek;\n  margin: 0;\n  padding: 0;\n`;","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  margin-bottom: 10px;\n  border: 2px solid green;\n  padding: 5px;\n`;\n\nexport const DataContact = styled.p`\n  display: flex;\n  font-size: 18px;\n  margin: 0 auto 0 0;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  padding: 10px 10px;\n  background-color: white;\n  border: 2px solid #4169e1;\n  border-radius: 4px;\n  font: 0.6em 'typewriter', sans-serif;\n  color: black;\n  outline: none;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n    border: 2px solid yellow;\n  }\n`;\n\nexport const Text = styled.span`\n  margin-right: 30px;\n  margin-left: 10px;\n`;","import { useState } from 'react';\nimport { Item, DataContact, Input, Text } from './ItemContact.styled';\nimport { useDispatch } from 'react-redux';\nimport { editContact } from 'redux/contacts/operations';\nimport { IconButton } from '@chakra-ui/button';\nimport { DeleteIcon, CheckIcon, EditIcon } from '@chakra-ui/icons';\n\nconst ItemContact = ({ id, name: nameValue, number: numberValue, onClick }) => {\n  const [isEdit, setIsEdit] = useState(false);\n  const [name, setName] = useState(nameValue);\n  const [number, setNumber] = useState(numberValue);\n  const dispatch = useDispatch();\n\n  const handleChangeMode = () => {\n    if (isEdit) {\n      setIsEdit(prev => !prev);\n      dispatch(editContact({ id, name, number }));\n      return;\n    }\n    setIsEdit(prev => !prev);\n  };\n\n  const handleChange = evt => {\n    switch (evt.target.name) {\n      case 'name':\n        setName(evt.target.value);\n        return;\n      case 'number':\n        setNumber(evt.target.value);\n        return;\n\n      default:\n        break;\n    }\n  };\n  return (\n    <>\n      <Item>\n        <DataContact>\n          {isEdit ? (\n            <Input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n            />\n          ) : (\n            <span>{name}</span>\n          )}\n          :\n          {isEdit ? (\n            <Input\n              type=\"text\"\n              name=\"number\"\n              value={number}\n              onChange={handleChange}\n            />\n          ) : (\n            <Text>{number}</Text>\n          )}\n        </DataContact>\n        <IconButton\n          colorScheme=\"green\"\n          aria-label=\"Delete\"\n          size=\"xs\"\n          icon={<DeleteIcon />}\n          onClick={onClick}\n        />\n\n        <IconButton\n          colorScheme=\"green\"\n          aria-label=\"Delete\"\n          size=\"xs\"\n          icon={isEdit ? <CheckIcon /> : <EditIcon />}\n          onClick={handleChangeMode}\n        />\n      </Item>\n    </>\n  );\n};\n\n\n\nexport default ItemContact;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 4px;\n  margin-bottom: 20px;\n  font-size: 18px;\n  line-height: 1.5;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\nfont-size: 18px;\nline-height: 1.6;\npadding: 5px;\nborder: 1px solid #cccaca;\nborder-radius: 5px;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilterValue  } from 'redux/contacts/filterSlice';\nimport { Label, Input } from './InputFilter.styled';\nimport { getFilter } from 'redux/contacts/selectors';\n\n// export const Filter = () => {\n  // const filter = useSelector(state => state.filter);\n  // const dispatch = useDispatch();\n\n  // const onFilterInput = evt => {\n  //   dispatch(setFilter(evt.target.value));\n  // };\n  const InputFilter = () => {\n    const dispatch = useDispatch();\n  \n    const value = useSelector(getFilter);\n\n  return (\n    <Label htmlFor=\"\">\n      Find contacts by name:\n      <Input type=\"text\" onChange={e => {\n          dispatch(setFilterValue(e.target.value));\n        }}\n        value={value} />\n    </Label>\n  );\n};\nexport default InputFilter;","import { List } from './ListContacts.styled';\nimport ItemContact from 'components/ItemContact/ItemContact';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\nimport InputFilter from 'components/InputFilter/InputFilter';\n\nconst getFilteredContacts = (contacts, filterValue) => {\n  const normalizedFilter = filterValue.toLocaleLowerCase();\n  return contacts.filter(contact =>\n    contact.name.toLocaleLowerCase().includes(normalizedFilter)\n  );\n};\n\nconst ListContacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filterValue = useSelector(getFilter);\n  const filteredContacts = getFilteredContacts(contacts, filterValue);\n\n  return (\n    <>\n      <InputFilter />\n      <List>\n        {filteredContacts.map(({ id, name, number }) => (\n          <ItemContact\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n            onClick={() => {\n              dispatch(deleteContact(id));\n            }}\n          />\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default ListContacts;","import styled from 'styled-components';\n\nexport const LoadingWpr = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { LoadingWpr } from './Loader/Loader.styled';\n\nexport const Loader = () => {\n    return (\n      <LoadingWpr>\n       <RotatingLines\n  strokeColor=\"grey\"\n  strokeWidth=\"5\"\n  animationDuration=\"0.75\"\n  width=\"96\"\n  visible={true}\n/>\n      </LoadingWpr>\n      \n    );\n  };","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getIsLoading, getError } from 'redux/contacts/selectors';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport ListContacts from 'components/ListContacts/ListContacts';\nimport { Loader } from 'components/Loader';\n\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(getIsLoading);\n\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          marginTop: 0,\n          marginBottom: 0,\n          marginRight: 'auto',\n          marginLeft: 'auto',\n          maxWidth: 1280,\n          minHeight: 600,\n          fontSize: 45,\n          color: '#2d2d2d',\n          paddingBottom: 60,\n        }}\n      >\n        <h1\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            marginTop: 20,\n            marginBottom: 10,\n            marginRight: 'auto',\n            marginLeft: 'auto',\n            fontWeight: '600',\n          }}\n        >\n          PHONEBOOK\n                  </h1>\n        <ContactForm />\n        <h2 style={{ fontSize: 36 }}>Contacts list</h2>\n\n        {isLoading && <Loader />}\n        {error && <b>Error, please reload the page</b>}\n        <ListContacts />\n      </div>\n    </>\n  );\n}"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getFilter","filter","StyledForm","styled","Form","Label","Input","Field","Button","ErrorMessage","schema","yup","shape","name","required","number","min","max","initialValues","ErrorText","FormError","render","message","ContactForm","dispatch","useDispatch","allContacts","useSelector","validationSchema","onSubmit","contact","resetForm","some","item","alert","addContact","type","placeholder","component","List","Item","DataContact","Text","id","nameValue","numberValue","onClick","useState","isEdit","setIsEdit","setName","setNumber","handleChange","evt","target","value","onChange","colorScheme","size","icon","prev","editContact","htmlFor","e","setFilterValue","filteredContacts","filterValue","normalizedFilter","toLocaleLowerCase","includes","getFilteredContacts","map","deleteContact","LoadingWpr","Loader","strokeColor","strokeWidth","animationDuration","width","visible","Contacts","useEffect","fetchContacts","style","display","flexDirection","alignItems","justifyContent","marginTop","marginBottom","marginRight","marginLeft","maxWidth","minHeight","fontSize","color","paddingBottom","fontWeight"],"sourceRoot":""}